import zlib
import base64

s = b'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'
b64 = base64.b64decode(s[::-1])
print(zlib.decompress(b64))

s2 = b'==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'
b64 = base64.b64decode(s2[::-1])
print(zlib.decompress(b64))

s3 = b'=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'
b64 = base64.b64decode(s3[::-1])
print(zlib.decompress(b64))

# Original code :
# b'# 2022 portforwarding lifetime trick \n# samay python programming \n# Cyber security expert samay \n# python object oriented programming\n\n# ------ imports \n\ntry:\n    import os \n    import sys\n    import requests\n    import time\n    import colorama\n    import selenium\n    import shutil\nexcept ImportError:\n    os.system(\'pip install requests\' if os.name==\'nt\' else \'pip3 install requests\')\n    os.system(\'pip install colorama\' if os.name==\'nt\' else \'pip3 install colorama\')\n    os.system(\'pip install selenium\' if os.name==\'nt\' else \'pip3 install selenium\')\n\nfrom colorama import Fore\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\n\n\n# ------ colors\nr = "\\033[1;31m"\ng = "\\033[1;32m"\ny = "\\033[1;33m"\nb = "\\033[1;34m"\nd = "\\033[2;37m"\nR = "\\033[1;41m"\nY = "\\033[1;43m"\nB = "\\033[1;44m"\nw = "\\033[1;37m"\ng = "\\033[0;90m"\ny = r\n\n\n# ---------- banner and functions \n\ndef banner():\n    print(y+y+"               ) ")\n    print(w+y+"              (( ")\n    print(w+y+"              ) \\ ")\n    print(w+y+"            (   ) ") \n    print(w+y+"            (  )  ) ") \n    print(w+y+"            ) (  ( \\ ")\n    print(w+y+"          (   )$ )  ) ")\n    print(w+y+"          ($$  ( \\   )           ")\n    print(w+b+"    ^^^^^"+w+g+",r@@@@@@@@@@e,"+w+b+"^^^^^^   \xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80/")\n    print(w+b+"      ^^^"+w+g+"@@@@@@@@@@@@@@@@"+w+b+"^^^    "+w+b+"Port-Forwarding( Pro ) - version 3.0         /")\n    print(w+g+"      \\@@/"+r+",:::,"+w+g+"\\/"+r+",:::,"+w+g+"\\@@       "+w+"\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80/")\n    print(w+g+"     /@@@|"+r+":::::"+w+g+"||"+r+":::::"+w+g+"|@@@\\\\     "+w+"Author by "+y+"@Samay825                        /")\n    print(w+g+"    / @@@\\\\"+r+"\':::\'"+w+g+"/\\\\"+r+"\':::\'"+w+g+"/@@@ \\\\    "+w+"The author is not responsible             /")\n    print(w+g+"   /  /@@@@@@@//\\\\\\@@@@@@@\\  \\\\   "+w+"for any issues or damage                 /")\n    print(w+g+"  (  /  \'@@@@@====@@@@@\'  \\  )  "+w+"caused by this program                  /")\n    print(w+g+"   \\(     /          \\     )/ "+"\\033[1;33m  \xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80/")\n    print(w+g+"     \\   (            )   /")\n    print(w+g+"          \\          /"+w)\n\ndef returnfunc():\n    samay_return = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mReturn or Exit [y/n] : "+r)\n    if samay_return==\'y\' or samay_return==\'Y\':\n        os.system(\'python main.py\' if os.name==\'nt\' else \'python3 main.py\')\n    else:\n        under()\n        print_content("Exiting ...")\n        sys.exit()\n\ndef clear():\n    os.system(\'cls\' if os.name==\'nt\' else \'clear\')\n\ndef under():\n    print(\'\\n\')\n\nabout = """ \n        \\033[1;37mDeveloper  \\033[1;34m: \\033[1;31mZork\n        \\033[1;37mGithub     \\033[1;34m: \\033[1;31mSamay825\n        \\033[1;37mInstagram  \\033[1;34m: \\033[1;31m@sincryptzork\n"""\n\n\ndef print_content(ops):\n    print(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37m"+ops)\n\ndef options_front():\n    clear()\n    banner()\n    for i in about:\n        sys.stdout.write(i)\n        sys.stdout.flush()\n        time.sleep(0.01)\n    under()\n    print_content(\'[ 1 ] Portforwarding Setup\')\n    print_content(\'[ 2 ] Login & Start\')\n    print_content(\'[ 3 ] About us\')\n    print_content(\'[ 4 ] Update \')\n    print_content(\'[ 5 ] Exit\')\n    under()\n\ndef options_second():\n    clear()\n    banner()\n    under()\n\noptions_front()\n\n\n\n#-------headers\n\n\n\nclass Samay:\n    project = \'portforwarding project 2022\'\n    def __init__(self,data):\n        self.data = data\n    def Functions(self):\n        if self.data==1:\n            options_second()\n            samay_start = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mStart the Setup Dont close After started [y/n] : "+r)\n            if samay_start==\'y\' or samay_start==\'Y\':\n                pass\n            else:\n                os.system(\'python main.py\' if os.name==\'nt\' else \'python3 main.py\')\n                sys.exit()\n            options_second()\n            samay_email  = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the Email to Create Account : "+r).strip()\n            samay_email_password = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the password : "+r).strip()\n            headers1 = {\n                \'authority\': \'api.playit.cloud\',\n                \'accept\': \'*/*\',\n                \'accept-language\': \'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7,eo;q=0.6,tr;q=0.5\',\n                \'content-type\': \'text/plain;charset=UTF-8\',\n                \'dnt\': \'1\',\n                \'origin\': \'https://playit.gg\',\n                \'referer\': \'https://playit.gg/\',\n                \'sec-fetch-dest\': \'empty\',\n                \'sec-fetch-mode\': \'cors\',\n                \'sec-fetch-site\': \'cross-site\',\n                \'user-agent\': \'Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1\',\n            }\n\n            data1 = \'{"type":"create-account","email":"<email>","password":"<password>"}\'\n            data1 = data1.replace(\'<email>\',samay_email)\n            data1 = data1.replace(\'<password>\',samay_email_password)\n            with requests.session() as s:\n                d = s.post(\'https://api.playit.cloud/login\', headers=headers1, data=data1)\n                if d.status_code==200:\n                    pass\n                else:\n                    under()\n                    print_content(\'check the email or retry again ..\')\n                    under()\n                    returnfunc()\n                options_second()\n                headers2 = {\n                    \'authority\': \'api.playit.cloud\',\n                    \'accept\': \'*/*\',\n                    \'accept-language\': \'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7,eo;q=0.6,tr;q=0.5\',\n                    \'content-type\': \'text/plain;charset=UTF-8\',\n                    \'dnt\': \'1\',\n                    \'origin\': \'https://playit.gg\',\n                    \'referer\': \'https://playit.gg/\',\n                    \'sec-fetch-dest\': \'empty\',\n                    \'sec-fetch-mode\': \'cors\',\n                    \'sec-fetch-site\': \'cross-site\',\n                    \'user-agent\': \'Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1\',\n                }\n\n                data2 = \'{"type":"sign-in","email":"<email>","password":"<password>"}\'\n                data2 = data2.replace(\'<email>\',samay_email)\n                data2 = data2.replace(\'<password>\',samay_email_password)\n\n                response2 = s.post(\'https://api.playit.cloud/login\', headers=headers2, data=data2)\n\n                sessionkey = response2.json()[\'session_key\']\n\n\n                print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] Account Created ..")\n                samay_1 = ("Your Email : "+Fore.GREEN+f"{samay_email}")\n                samay_2 = ("Your Password : "+Fore.GREEN+f"{samay_email_password}")\n                print_content(samay_1)\n                print_content(samay_2)\n                with open(\'emailpass.txt\',\'a\') as filesamay:\n                    data11 = samay_1\n                    data2 = samay_2\n                    filesamay.write(f\'{data11}\\n\')\n                    filesamay.write(f\'{data2}\\n\')\n                    print_content("Copied email and pass into emailpass.txt you can check it out !")\n                print_content("Mail has sended to your email : "+str(samay_email))\n                under()\n                print_content(\'type resend to resend verification code\')\n                under()\n                headers3 = {\n                    \'authority\': \'api.playit.cloud\',\n                    \'accept\': \'*/*\',\n                    \'accept-language\': \'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7,eo;q=0.6,tr;q=0.5\',\n                    \'authorization\': f\'bearer {sessionkey}\',\n                    \'content-type\': \'text/plain;charset=UTF-8\',\n                    \'dnt\': \'1\',\n                    \'origin\': \'https://playit.gg\',\n                    \'referer\': \'https://playit.gg/\',\n                    \'sec-fetch-dest\': \'empty\',\n                    \'sec-fetch-mode\': \'cors\',\n                    \'sec-fetch-site\': \'cross-site\',\n                    \'user-agent\': \'Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1\',\n                }\n\n                data3 = \'{"type":"send-verify-email-link"}\'\n\n                \n                verifycode = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the verification code : "+r).strip()\n                \n\n                if verifycode==\'resend\':\n                    options_second()\n                    under()\n                    print_content(\'mail sended again ..\')\n                    response3 = s.post(\'https://api.playit.cloud/login\', headers=headers3, data=data3)\n                    verify2s = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the verification code : "+r).strip()\n                    verifycode = verify2s\n\n\n\n                #\n                headers4 = {\n                    \'authority\': \'api.playit.cloud\',\n                    \'accept\': \'*/*\',\n                    \'accept-language\': \'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7,eo;q=0.6,tr;q=0.5\',\n                    \'authorization\': f\'bearer {sessionkey}\',\n                    \'content-type\': \'text/plain;charset=UTF-8\',\n                    \'dnt\': \'1\',\n                    \'origin\': \'https://playit.gg\',\n                    \'referer\': \'https://playit.gg/\',\n                    \'sec-fetch-dest\': \'empty\',\n                    \'sec-fetch-mode\': \'cors\',\n                    \'sec-fetch-site\': \'cross-site\',\n                    \'user-agent\': \'Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1\',\n                }\n\n                data4 = \'{"type":"verify-email","code":"<code>"}\'\n                data4 = data4.replace(\'<code>\',verifycode)\n\n                response4 = s.post(\'https://api.playit.cloud/login\', headers=headers4, data=data4)\n                if response4.status_code==200:\n                    under()\n                    print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] Checking..")\n                    time.sleep(1.5)\n                    print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] Email Verfied")\n                    print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] Downloading exe file to excute !")\n                    time.sleep(0.5)\n                    with s.get(\'https://objects.githubusercontent.com/github-production-release-asset-2e65be/445695426/bbac8128-50dc-4a04-9e10-977fb368583f?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20220917%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220917T003134Z&X-Amz-Expires=300&X-Amz-Signature=d4d0df139904192d6cc217d6b54b1e88ec65bc72cab3e402a9d6f7127ca9a2b8&X-Amz-SignedHeaders=host&actor_id=98804125&key_id=0&repo_id=445695426&response-content-disposition=attachment%3B%20filename%3Dplayit-0.9.3-signed.exe&response-content-type=application%2Foctet-stream\') as vaimsamaymandir_bikhari:\n                        with open(\'static-ips.exe\',\'wb\') as samay_file_write:\n                            samay_file_write.write(vaimsamaymandir_bikhari.content)\n                            print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] Downloaded the exe file ")\n                    under()\n                    session_key2 = response4.json()[\'session_key\']\n                    headers5 = {\n                        \'authority\': \'api.playit.cloud\',\n                        \'accept\': \'*/*\',\n                        \'accept-language\': \'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7,eo;q=0.6,tr;q=0.5\',\n                        \'authorization\': f\'bearer {session_key2}\',\n                        \'content-type\': \'text/plain;charset=UTF-8\',\n                        \'dnt\': \'1\',\n                        \'origin\': \'https://playit.gg\',\n                        \'referer\': \'https://playit.gg/\',\n                        \'sec-fetch-dest\': \'empty\',\n                        \'sec-fetch-mode\': \'cors\',\n                        \'sec-fetch-site\': \'cross-site\',\n                        \'user-agent\': \'Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1\',\n                    }\n\n                    data5 = \'{"type":"create-tunnel","tunnel_type":null,"port_type":"tcp","port_count":1,"local_ip":"127.0.0.1","local_port":<port>}\'\n\n\n                    portlistner = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the Listener Port to add  : "+r).strip()\n\n                    data5 = data5.replace(\'<port>\',portlistner)\n\n                    response5 = s.post(\'https://api.playit.cloud/account\', headers=headers5, data=data5)\n\n                    if response5.status_code==401 or response5.status_code==200:\n                        #\n\n                        under()\n                        print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] Port added ")\n                        print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] Account Created")\n                        if os.name==\'nt\':\n                            print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] Opening chrome Browser ")\n                            under()\n                            time.sleep(2.0)\n                            scan_path = os.path.realpath(\'Config\\chromedriverwin.exe\')\n                            scan_browser_support = webdriver.Chrome(executable_path=str(scan_path))\n                            url = \'https://playit.gg/login\'\n                            scan_browser_support.get(url)\n                            time.sleep(1.0)\n                            driver_username2 = scan_browser_support.find_element(By.NAME,\'email\')\n                            driver_username2.send_keys(f\'{samay_email}\')\n                            driver_password2 = scan_browser_support.find_element(By.NAME,\'password\')\n                            driver_password2.send_keys(f\'{samay_email_password}\')\n                            login2 = scan_browser_support.find_element(By.CSS_SELECTOR,"input[type=\\"submit\\"]")\n                            login2.click()\n                            time.sleep(5.5)\n                            url = "https://playit.gg/account/tunnels"\n                            scan_browser_support.get(url)\n                            time.sleep(0.8)\n                            options_second()\n                            print_content("Copy the tunnel Address shown in the browser ! ")\n                            under()\n                            driver_port = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the tunnel address : "+r)\n                            driver_port_split = driver_port.split(\'.\')\n                            os.system(\'\'\'wmic process where "name=\'chromedriverwin.exe\'" delete\'\'\')\n                            options_second()\n                            your_port = (driver_port_split[0]+\'.\'+driver_port_split[1]+\'.\'+driver_port_split[2]+\'.\'+\'gg\')\n                            your_port_ip = (driver_port_split[3]).split(\':\')\n                            content1 = "Your IP == "+str(your_port)\n                            content2 = "Your Port == "+str(your_port_ip[1])\n                            content3 = "Your Listener port == "+str(portlistner)\n                            print_content(content1)\n                            print_content(content2)\n                            with open(\'tcp_port_ip.txt\',\'w\') as tcp:\n                                tcp.write(f\'{content1}\\n\')\n                                tcp.write(f\'{content2}\\n\')\n                                tcp.write(f\'{content3}\\n\')\n                            print_content("Your listener port : "+str(portlistner))\n                            print_content(\'Your ip address and port saved in tcp_port_ip.txt\')\n                            under()\n                            under()\n                            samay_regis_token = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mType [y/n] : "+r)\n                            if samay_regis_token==\'Y\' or samay_regis_token==\'Y\' or samay_regis_token==\'n\' or samay_regis_token==\'N\':\n                                pass\n                            else:\n                                pass\n                            print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] Registration of exe ")\n                                # this time !\n                            time.sleep(0.5)\n                            options_second()\n                            print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] Registration and all required things are installed ...")\n                            os.startfile(\'static-ip.exe\')\n                            os.system(\'\'\'wmic process where "name=\'chrome.exe\'" delete\'\'\')\n                            time.sleep(0.4)\n                            os.system(\'\'\'wmic process where "name=\'chrome.exe\'" delete\'\'\')\n                            time.sleep(0.5)\n                            os.system(\'\'\'wmic process where "name=\'chrome.exe\'" delete\'\'\')\n                            options_second()\n                            user = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the link to validate : "+r)\n                            print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] Opening chrome Browser ")\n                            under()\n                            time.sleep(2.0)\n                            data_path_sk = os.path.realpath(str(\'Config\\chromedriverwin.exe\'))\n                            scan_browser_support = webdriver.Chrome(executable_path=str(data_path_sk))\n                            scan_browser_support.get(user)\n                            driver_username9 = scan_browser_support.find_element(By.NAME,\'email\')\n                            driver_username9.send_keys(f\'{samay_email}\')\n                            driver_password9 = scan_browser_support.find_element(By.NAME,\'password\')\n                            driver_password9.send_keys(f\'{samay_email_password}\')\n                            login7 = scan_browser_support.find_element(By.CSS_SELECTOR,"input[type=\\"submit\\"]")\n                            login7.click()\n                            options_second()\n                            print(\'\\n\')\n                            iosj = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mType [y/n] : \\n"+r)\n                            os.system(\'\'\'wmic process where "name=\'chrome.exe\'" delete\'\'\')\n                            options_second()\n                            time.sleep(0.4)\n                            os.system(\'\'\'wmic process where "name=\'static-ip.exe\'" delete\'\'\')\n                            print(\'\\n\')\n                            print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] All Registration Completed !")\n                            under()\n                            returnfunc()    \n\n\n                else:\n                    under()\n                    print_content(\'Incorrect Code Retry with Other gmail\')\n                    under()\n                    sys.exit()\n        elif self.data==2:\n\n            with open(\'emailpass.txt\',\'r\') as ossamay:\n                data_read = ossamay.read()\n\n            data_read = data_read.replace(\'\\x1b[32m\',\'\').strip()\n\n            samay_read_new = data_read.split()\n\n            options_second()\n            print_content(\'\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] Logged in !\')\n            under()\n            with open(\'tcp_port_ip.txt\',\'r\') as _final_:\n                data_final = _final_.read()\n            _final_read_ = str(data_final).split()\n\n            print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] Your Ip : "+Fore.GREEN+str(_final_read_[3]))\n            print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] Your Port : "+Fore.GREEN+str(_final_read_[7]))\n            print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] Your Listener port : "+Fore.GREEN+str(_final_read_[12]))\n            under()\n            _second_final = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mConnect [y/n] : "+r)\n            if _second_final==\'n\':\n                sys.exit()\n            os.startfile(\'static-ip.exe\')\n            options_second()\n            print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ] Connected ")\n            under()\n            wow_final_year = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mIf you want to kill connection type \'y\' : "+r)\n            if wow_final_year==\'Y\' or wow_final_year==\'y\':\n                    nicework_final_year = input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mConfirm [y/n] : "+r)\n                    if nicework_final_year==\'y\' or nicework_final_year==\'Y\':\n                        os.system(\'\'\'wmic process where "name=\'static-ip.exe\'" delete\'\'\')\n                        time.sleep(0.6)\n                        print_content("\xe2\x94\x94\xe2\x94\x80[ \xe2\x9c\x94 ]  killed connection ")\n                        under()\n                        returnfunc()\n                    elif wow_final_year==\'n\' or wow_final_year==\'N\':\n                        pass\n                    else:\n                        pass\n      \n        elif self.data==3:\n            options_second()\n            samay_write_about_func = Fore.GREEN+\'\'\'hi, i\'m Ethical Hacker Zork,\\n a passionate self-taught Powerful Ethical Hacker and C,C++,JS,Shell and Python developer and a freelance software engineer from india. my passion for software lies with dreaming up ideas and making them come true with elegant interfaces. i take great care in the experience, architecture, and code quality of the things I build.\n            i am also an open-source enthusiast and maintainer. i learned a lot from the open-source community and i love how collaboration and knowledge sharing happened through open-source.\n            \n            \'\'\'\n            for i in samay_write_about_func:\n                sys.stdout.write(i)\n                sys.stdout.flush()\n                time.sleep(0.01)\n            print(\'\\n\')\n            returnfunc()\n        elif self.data==4:\n            os.system(\'python update.py\')\n        else:\n            under()\n            print_content(\'Exiting ..\')\n            under()\n            sys.exit()\n                \n\n\n\n\n\n\n\n\ntry:\n    userdata2 = int(input(r+"\xe2\x94\x94\xe2\x94\x80"+w+"\\033[1;37mEnter the Desire option : "+r))\nexcept:\n    under()\n    print_content(\'Put numbers to choose options not letters ..\')\n    under()\n    sys.exit()\n\nif __name__ == \'__main__\':\n    Vrushabh = Samay(userdata2)\n    Vrushabh.Functions()\n\n\n'
